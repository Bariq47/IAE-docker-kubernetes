apiVersion: v1
data:
  .editorconfig: |
    root = true

    [*]
    charset = utf-8
    end_of_line = lf
    indent_size = 4
    indent_style = space
    insert_final_newline = true
    trim_trailing_whitespace = true

    [*.md]
    trim_trailing_whitespace = false

    [*.{yml,yaml}]
    indent_size = 2

    [docker-compose.yml]
    indent_size = 4
  .env: |
    APP_NAME=Laravel
    APP_ENV=local
    APP_KEY=base64:dGhVlyGh7FcmaXpmHuVDhT322Jdj7Oz1kFk3H9PTAeI=
    APP_DEBUG=true
    APP_URL=http://localhost

    LOG_CHANNEL=stack
    LOG_DEPRECATIONS_CHANNEL=null
    LOG_LEVEL=debug

    DB_CONNECTION=mysql
    DB_HOST=mahasiswa-db      # 127.0.0.1
    DB_PORT=3306
    DB_DATABASE=db_mahasiswa_iae
    DB_USERNAME=root
    DB_PASSWORD=root

    BROADCAST_DRIVER=log
    CACHE_DRIVER=file
    FILESYSTEM_DISK=local
    QUEUE_CONNECTION=database
    SESSION_DRIVER=file
    SESSION_LIFETIME=120

    MEMCACHED_HOST=127.0.0.1

    REDIS_HOST=redis   # 127.0.0.1
    REDIS_PASSWORD=null
    REDIS_PORT=6379
    REDIS_CLIENT=predis


    AWS_ACCESS_KEY_ID=
    AWS_SECRET_ACCESS_KEY=
    AWS_DEFAULT_REGION=us-east-1
    AWS_BUCKET=
    AWS_USE_PATH_STYLE_ENDPOINT=false

    PUSHER_APP_ID=
    PUSHER_APP_KEY=
    PUSHER_APP_SECRET=
    PUSHER_HOST=
    PUSHER_PORT=443
    PUSHER_SCHEME=https
    PUSHER_APP_CLUSTER=mt1

    VITE_APP_NAME="${APP_NAME}"
    VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
    VITE_PUSHER_HOST="${PUSHER_HOST}"
    VITE_PUSHER_PORT="${PUSHER_PORT}"
    VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
    VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

    MAIL_MAILER=smtp
    MAIL_HOST=smtp.mailtrap.io
    MAIL_PORT=2525
    MAIL_USERNAME=b713452dd87fe1
    MAIL_PASSWORD=16701a797f1a2f
    MAIL_ENCRYPTION=null
    MAIL_FROM_ADDRESS=admin@kampus.ac.id
    MAIL_FROM_NAME="Kampus Notification"

    NILAI_SERVICE_URL=http://laravel-nilaiservice
  .env.example: |
    APP_NAME=Laravel
    APP_ENV=local
    APP_KEY=
    APP_DEBUG=true
    APP_URL=http://localhost

    LOG_CHANNEL=stack
    LOG_DEPRECATIONS_CHANNEL=null
    LOG_LEVEL=debug

    DB_CONNECTION=mysql
    DB_HOST=127.0.0.1
    DB_PORT=3306
    DB_DATABASE=laravel
    DB_USERNAME=root
    DB_PASSWORD=

    BROADCAST_DRIVER=log
    CACHE_DRIVER=file
    FILESYSTEM_DISK=local
    QUEUE_CONNECTION=sync
    SESSION_DRIVER=file
    SESSION_LIFETIME=120

    MEMCACHED_HOST=127.0.0.1

    REDIS_HOST=127.0.0.1
    REDIS_PASSWORD=null
    REDIS_PORT=6379

    MAIL_MAILER=smtp
    MAIL_HOST=mailpit
    MAIL_PORT=1025
    MAIL_USERNAME=null
    MAIL_PASSWORD=null
    MAIL_ENCRYPTION=null
    MAIL_FROM_ADDRESS="hello@example.com"
    MAIL_FROM_NAME="${APP_NAME}"

    AWS_ACCESS_KEY_ID=
    AWS_SECRET_ACCESS_KEY=
    AWS_DEFAULT_REGION=us-east-1
    AWS_BUCKET=
    AWS_USE_PATH_STYLE_ENDPOINT=false

    PUSHER_APP_ID=
    PUSHER_APP_KEY=
    PUSHER_APP_SECRET=
    PUSHER_HOST=
    PUSHER_PORT=443
    PUSHER_SCHEME=https
    PUSHER_APP_CLUSTER=mt1

    VITE_APP_NAME="${APP_NAME}"
    VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
    VITE_PUSHER_HOST="${PUSHER_HOST}"
    VITE_PUSHER_PORT="${PUSHER_PORT}"
    VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
    VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
  .gitattributes: |
    * text=auto eol=lf

    *.blade.php diff=html
    *.css diff=css
    *.html diff=html
    *.md diff=markdown
    *.php diff=php

    /.github export-ignore
    CHANGELOG.md export-ignore
    .styleci.yml export-ignore
  .gitignore: |
    /.phpunit.cache
    /node_modules
    /public/build
    /public/hot
    /public/storage
    /storage/*.key
    /vendor
    .env
    .env.backup
    .env.production
    .phpunit.result.cache
    Homestead.json
    Homestead.yaml
    auth.json
    npm-debug.log
    yarn-error.log
    /.fleet
    /.idea
    /.vscode
  Dockerfile: |
    FROM php:8.2-apache

    RUN apt-get update && apt-get install -y \
        curl \
        libzip-dev zip unzip \
        && docker-php-ext-install pdo pdo_mysql zip


    RUN a2enmod rewrite

    ENV APACHE_DOCUMENT_ROOT=/var/www/html/public
    RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
    RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

    WORKDIR /var/www/html

    COPY composer.json composer.lock ./

    RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

    COPY . .

    RUN composer install --no-dev --optimize-autoloader

    RUN composer require predis/predis

    RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache


    EXPOSE 80

    CMD ["apache2-foreground"]
  README.md: |
    <p align="center"><a href="https://laravel.com" target="_blank"><img src="https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg" width="400" alt="Laravel Logo"></a></p>

    <p align="center">
    <a href="https://github.com/laravel/framework/actions"><img src="https://github.com/laravel/framework/workflows/tests/badge.svg" alt="Build Status"></a>
    <a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/dt/laravel/framework" alt="Total Downloads"></a>
    <a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/v/laravel/framework" alt="Latest Stable Version"></a>
    <a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/l/laravel/framework" alt="License"></a>
    </p>

    ## About Laravel

    Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:

    - [Simple, fast routing engine](https://laravel.com/docs/routing).
    - [Powerful dependency injection container](https://laravel.com/docs/container).
    - Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.
    - Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).
    - Database agnostic [schema migrations](https://laravel.com/docs/migrations).
    - [Robust background job processing](https://laravel.com/docs/queues).
    - [Real-time event broadcasting](https://laravel.com/docs/broadcasting).

    Laravel is accessible, powerful, and provides tools required for large, robust applications.

    ## Learning Laravel

    Laravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.

    You may also try the [Laravel Bootcamp](https://bootcamp.laravel.com), where you will be guided through building a modern Laravel application from scratch.

    If you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains thousands of video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.

    ## Laravel Sponsors

    We would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the [Laravel Partners program](https://partners.laravel.com).

    ### Premium Partners

    - **[Vehikl](https://vehikl.com/)**
    - **[Tighten Co.](https://tighten.co)**
    - **[WebReinvent](https://webreinvent.com/)**
    - **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**
    - **[64 Robots](https://64robots.com)**
    - **[Curotec](https://www.curotec.com/services/technologies/laravel/)**
    - **[Cyber-Duck](https://cyber-duck.co.uk)**
    - **[DevSquad](https://devsquad.com/hire-laravel-developers)**
    - **[Jump24](https://jump24.co.uk)**
    - **[Redberry](https://redberry.international/laravel/)**
    - **[Active Logic](https://activelogic.com)**
    - **[byte5](https://byte5.de)**
    - **[OP.GG](https://op.gg)**

    ## Contributing

    Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).

    ## Code of Conduct

    In order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).

    ## Security Vulnerabilities

    If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.

    ## License

    The Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).
  artisan: |
    #!/usr/bin/env php
    <?php

    define('LARAVEL_START', microtime(true));

    /*
    |--------------------------------------------------------------------------
    | Register The Auto Loader
    |--------------------------------------------------------------------------
    |
    | Composer provides a convenient, automatically generated class loader
    | for our application. We just need to utilize it! We'll require it
    | into the script here so that we do not have to worry about the
    | loading of any of our classes manually. It's great to relax.
    |
    */

    require __DIR__.'/vendor/autoload.php';

    $app = require_once __DIR__.'/bootstrap/app.php';

    /*
    |--------------------------------------------------------------------------
    | Run The Artisan Application
    |--------------------------------------------------------------------------
    |
    | When we run the console application, the current CLI command will be
    | executed in this console and the response sent back to a terminal
    | or another output device for the developers. Here goes nothing!
    |
    */

    $kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

    $status = $kernel->handle(
        $input = new Symfony\Component\Console\Input\ArgvInput,
        new Symfony\Component\Console\Output\ConsoleOutput
    );

    /*
    |--------------------------------------------------------------------------
    | Shutdown The Application
    |--------------------------------------------------------------------------
    |
    | Once Artisan has finished running, we will fire off the shutdown events
    | so that any final work may be done by the application before we shut
    | down the process. This is the last thing to happen to the request.
    |
    */

    $kernel->terminate($input, $status);

    exit($status);
  composer.json: |
    {
        "name": "laravel/laravel",
        "type": "project",
        "description": "The skeleton application for the Laravel framework.",
        "keywords": ["laravel", "framework"],
        "license": "MIT",
        "require": {
            "php": "^8.1",
            "guzzlehttp/guzzle": "^7.2",
            "laravel/framework": "^10.10",
            "laravel/sanctum": "^3.3",
            "laravel/tinker": "^2.8",
            "predis/predis": "^3.0"
        },
        "require-dev": {
            "fakerphp/faker": "^1.9.1",
            "laravel/pint": "^1.0",
            "laravel/sail": "^1.18",
            "mockery/mockery": "^1.4.4",
            "nunomaduro/collision": "^7.0",
            "phpunit/phpunit": "^10.1",
            "spatie/laravel-ignition": "^2.0"
        },
        "autoload": {
            "psr-4": {
                "App\\": "app/",
                "Database\\Factories\\": "database/factories/",
                "Database\\Seeders\\": "database/seeders/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Tests\\": "tests/"
            }
        },
        "scripts": {
            "post-autoload-dump": [
                "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
                "@php artisan package:discover --ansi"
            ],
            "post-update-cmd": [
                "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
            ],
            "post-root-package-install": [
                "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
            ],
            "post-create-project-cmd": [
                "@php artisan key:generate --ansi"
            ]
        },
        "extra": {
            "laravel": {
                "dont-discover": []
            }
        },
        "config": {
            "optimize-autoloader": true,
            "preferred-install": "dist",
            "sort-packages": true,
            "allow-plugins": {
                "pestphp/pest-plugin": true,
                "php-http/discovery": true
            }
        },
        "minimum-stability": "stable",
        "prefer-stable": true
    }
  package.json: |
    {
        "private": true,
        "type": "module",
        "scripts": {
            "dev": "vite",
            "build": "vite build"
        },
        "devDependencies": {
            "axios": "^1.6.4",
            "laravel-vite-plugin": "^1.0.0",
            "vite": "^5.0.0"
        }
    }
  phpunit.xml: |
    <?xml version="1.0" encoding="UTF-8"?>
    <phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
             bootstrap="vendor/autoload.php"
             colors="true"
    >
        <testsuites>
            <testsuite name="Unit">
                <directory>tests/Unit</directory>
            </testsuite>
            <testsuite name="Feature">
                <directory>tests/Feature</directory>
            </testsuite>
        </testsuites>
        <source>
            <include>
                <directory>app</directory>
            </include>
        </source>
        <php>
            <env name="APP_ENV" value="testing"/>
            <env name="BCRYPT_ROUNDS" value="4"/>
            <env name="CACHE_DRIVER" value="array"/>
            <!-- <env name="DB_CONNECTION" value="sqlite"/> -->
            <!-- <env name="DB_DATABASE" value=":memory:"/> -->
            <env name="MAIL_MAILER" value="array"/>
            <env name="PULSE_ENABLED" value="false"/>
            <env name="QUEUE_CONNECTION" value="sync"/>
            <env name="SESSION_DRIVER" value="array"/>
            <env name="TELESCOPE_ENABLED" value="false"/>
        </php>
    </phpunit>
  vite.config.js: |
    import { defineConfig } from 'vite';
    import laravel from 'laravel-vite-plugin';

    export default defineConfig({
        plugins: [
            laravel({
                input: ['resources/css/app.css', 'resources/js/app.js'],
                refresh: true,
            }),
        ],
    });
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: mahasiswaservice
  name: mahasiswaservice-cm0
